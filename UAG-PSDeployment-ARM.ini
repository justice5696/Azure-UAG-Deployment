#FORMATTING NOTES:
    # variables must be listed like <name>=<value> with no leading or trailing spaces
    # Comments have to be on their own line - you can't have a comment on the same line as a variable like so: <name>=<value> #Comment
    # NO LEADING OR TRAILING WHITESPACES ON THE SAME LINES AS THE HEADERS (ie. [Azure] shouldn't have any leading or trailing spaces)
    # You can have new lines or whitespace on lines that don't contain a variable
# THESE SCRIPTS ARE UPDATED AS NEW UAG VERSIONS COME OUT - IT IS ALWAYS A GOOD IDEA TO DOWNLOAD THE NEWEST VERSION. IF YOU HAVE MADE CHANGES THEY WILL NEED TO BE MANUALLY COPIED TO THE NEW SCRIPTS
# Document with explanation of many [General] INI file attribtues: https://communities.vmware.com/t5/Horizon-Documents/Using-PowerShell-to-Deploy-VMware-Unified-Access-Gateway/ta-p/2782995
# List of many [Azure] INI file attributes: https://docs.vmware.com/en/Unified-Access-Gateway/2209/vmware-uag-powershell-azure-deployment/GUID-3E83723B-DC78-44D0-87B5-A07628149250.html

[General]

# MANDATORY: The name of the Azure VM Object. The Name should have exactly one single non-zero digit (unless you specify a CustomPort below) like UAG-N-ZEUS-03
# IMPORTANT: IF YOU USE THE SCRIPT TO DEPLOY A NEW UAG WITH THE SAME NAME AS AN EXISTING ONE, IT MAY DESTORY YOUR OLD UAG - BE CAREFUL!!!!! SEE Function: DeleteExistingUAGResources in deployment script
name=UAG-NAME

# MANDATORY: OPTIONS: onenic, twonic, threenic
deploymentOption=twonic 

# OPTIONAL: Leave this at true, this is the default UAG setting
honorCipherOrder=true

# OPTIONAL/IMPORTANT: If wanting to enable SSH, must set sshEnabled=true, sshKeyAccessEnabled=true, and give (at least) one valid ssh public key file
# sshEnabled=true
# sshKeyAccessEnabled=true
# sshPublicKey0=<file_path_to_pubKey_file>
# sshPublicKey1=<file_path_to_pubKey_file>

# OPTIONAL: List of static routes for NIC0. Comma separated list of static routes in the form of: network in CIDR format followed by a space followed by the gateway IP address.
routes1=10.0.0.0/8 10.2.3.4

# MANDATORY: Space separated list of IPs mapping to DNS Servers
dns=10.10.10.10 10.10.10.11

# OPTIONAL: Space separated list of domains added to the list of DNS Search Domains
dnsSearch=domain.com domain.local

# OPTIONAL: Space separated list of NTP Servers. Not necessary as UAG will use Internet Time Servers by default
ntpServers=time.google.com

# OPTIONAL: Maximum session time in milliseconds allowed for a logged on user. Default is 36000000 (10 hours). User is automatically disconnected after this timeout and is required to auth again.
sessionTimeout=86400000

# MANDATORY: THIS MUST BE SET TO '/favicon.ico'
healthCheckUrl=/favicon.ico


# OPTIONAL: THESE ARE ALL OPTIONAL CONFIGS RELATED TO A SYSLOG CONFIGURATION
#syslogUrl=
#syslogAuditUrl=
#syslogSystemMessagesEnabled=
#sysLogType=
#syslogServerCACertPem=

# OPTIONAL: This is the number of days before the UAG Admin account password expires. The default is 90 if not specified.
#adminPasswordExpirationDays=

[Azure]

# MANDATORY: The Subscription ID of the Azure Subscription where this UAG is being deployed
subscriptionID=afnlksj-3i003nd-du9nd930d9-jlesfisbfni


# MANDATORY: Azure Resource Group that the VM Object will be deployed to
resourceGroupName=UAG-TEST

# MANDATORY: Azure Region that the VM and its resources will be deployed to. Must use the Azure Region Name (See: https://azuretracks.com/2021/04/current-azure-region-names-reference/)
location=eastus

# MANDATORY: Name of the Azure Storage account where the UAG VHD is stored
storageAccountName=SA-UAG

# MANDATORY: Name of the Azure Resource Group where the above Storage Account exists
storageAccountRG=UAG-TEST

# MANDATORY: This is the name of the container in the Azure Storage Account where the VHD is stored. This should generally always be vhds.
diskStorageContainer=vhds

# MANDATORY: The URI of the UAG VHD within the above Storage Account - should be possible to find within the Azure Storage Account above
imageURI=https://<storageaccount>.blob.core.windows.net/vhds/euc-unified-access-gateway-22.03.1.0-19775281_OVF10.vhd

# MANDATORY: The FileName of the UAG VHD stored in the above storage account (just the file name portion of the above imageURI (so it doesn't have to be parsed in the script))
vhduag=euc-unified-access-gateway-22.03.1.0-19775281_OVF10.vhd

# MANDATORY: The Name of an existing Azure Availability Set or the Name that will be used to create a new Availability Set. The deployed UAG will be added to this availability set.
availabilitySetName=UAG-AvailabilitySet
# MANDATORY: The Name of the Resource Group where an existing Azure Availability Set lives or the desired Resource Group for a new Availability Set
availabilitySetRG=UAG-TEST

# MANDATORY: Azure VM size from the list supported by Azure
vmSize=Standard_D4s_v4

# MANDATORY: The Name of the Azure Virtual Network where the UAGs NICs will be deployed
virtualNetworkName=UAG-vnet

# MANDATORY: The Name of the Resource Group of the Azure Virtual Network where the UAG NICs will be deployed 
VirtualNetresourceGroupName=vnet-Rg

####eth0 settings: settings pertaining only to the 1st NIC on the UAG (Internet NIC) #####

# MANDATORY: The Name of the Subnet that the 1st NIC on the UAG will be deployed into (the 1st NIC is the Internet NIC)
subnetName0=UAG-Net

# MANDATORY: The Name of the NSG that the 1st NIC on the UAG will be associated with
networkSecurityGroupName0=UAG-Internet-SG

# MANDATORY: The Name of the Resource Group that networkSecurityGroupName0 belongs to
NSGResourceGroup0=UAG-TEST


####eth1 settings:  settings pertaining only to the 2nd NIC on the UAG (Management NIC) #####

# MANDATORY: The Name of the Subnet that the 2nd NIC on the UAG will be deployed into (the 2nd NIC is the Management NIC)
subnetName1=UAG-MGMT-Net

# MANDATORY: The Name of the NSG that the 2nd NIC on the UAG will be associated with
networkSecurityGroupName1=UAG-Mgmt-SG

# MANDATORY: The Name of the Resource Group that networkSecurityGroupName1 belongs to
NSGResourceGroup1=UAG-TEST

# OPTIONAL: If createLBifLBdoesnotexist is true (case-sensitive) then a new LB will be created with the below settings. If it is anything else, then a new LB will not be created
createLBifLBdoesnotexist=true

# OPTIONAL: The Name of an existing Azure Load Balancer or the Name that will be used to create a new Load Balancer (if createLBifLBdoesnotexist=true). If a name is given but createLBifLBdoesnotexist!=true then the script will expect a Load Balancer of that name to already exist (if not, the load balancer section of the script will be skipped)
loadBalancerName=UAG-TEST-LB
# OPTIONAL: (Mandatory if loadBalancerName is specified) The Name of the Resource Group where an existing Azure Load Balancer lives or the Name of a Resource Group where a where a new Load Balancer will be created (if createLBifLBdoesnotexist=true). 
loadBalancerRG=UAG-TEST
# OPTIONAL: Flag that indicates to the script whether the created UAG will be added to the existing Load Balancer or newly created Load Balancer (if createLBifLBdoesnotexist=true). The UAG will only be added to the Load Balancer if this value is true (case-sensitive).
addUAGtoLB=true
# OPTIONAL: (Mandatory if createLBifLBdoesnotexist=true) The Name of the Resource Group where a new Azure Public IP that will serve as the Front End to the Load Balancer will be created.
LBPublicIPresourceGroup=UAG-TEST

#OPTIONAL: Only relevant if addUAGtoLB=true:
    #If this UAGCustomPort is Specified then it will be used for the Load Balancer Inbound Nat Rules and the Tunnel/Blast External URLs
    #If this UAGCustomPort isn't specified it will be randomly generated in the form 10X43 and it will be used for the Load Balancer Inbound Nat Rules and the Tunnel/Blast External URLs
#If addUAGtoLB is not true, the Tunnel External URL will be configured for 443 and Blast External URL configured for 8443 and UAGCustomPort is irrelevant
#UAGCustomPort=

[Horizon]

# MANDATORY: The URL that the UAG will use to commnicate with Horizon Connection Servers 
proxyDestinationUrl=https://vdi.horizon.local

# MANDATORY: The Thumbprint of the certifacte presented by the Connection Servers this UAG will communicate with
# NOTE: IF THE CONNECTION SERVER CERTIFICATES CHANGE, SO WILL THIS THUMBPRINT
proxyDestinationUrlThumbprints=3456fjaif85nf9jwpfob84b8tnw9jf9jdh

# blastExternalUrl and tunnelExternalUrl should always be the same
# MANDATORY: This should always be the HOSTNAME (not URL) that the UAG will listen on (the actual URL will be constructed by the script). 
# This is necessary so that the URL can be customized with a different Port if desired. 
blastExternalUrl=vdi.horizon.com
# MANDATORY: This should always be the HOSTNAME (not URL) that the UAG will listen on (the actual URL will be constructed by the script)
# This is necessary so that the URL can be customized with a different Port if desired. 
tunnelExternalUrl=vdi.horizon.com

# MANDATORY: This should always be set to true - it allows the Tunnel Service to use UDP in addition to TCP
udpTunnelServerEnabled=true

# MANDATORY: This should always be (/|/view-client(.*)|/portal(.*)|/appblast(.*)) for proper communication to Horizon
proxyPattern=(/|/view-client(.*)|/portal(.*)|/appblast(.*))


# MANDATORY: This indicates which IP Protocol to user 
proxyDestinationIPSupport=IPV4

# MANDATORY: Leave this at the default of ALLOWED
clientEncryptionMode=ALLOWED

# MANDATORY: This indicates to the Horizon application where this UAG is accessible from External OR Internal
gatewayLocation=External

# MANDATORY: This indicates whether this UAG will Proxy Client only or HTML and Client Horizon Connections to the Horizon system. Can be false or true
disableHtmlAccess=false

# OPTIONAL: If this equals true (case-sensitive) then the script will create a WorkSpace ONE SAML Web App using the WS1Tenant field below. If it is anything other than true, the script will not create a web app.
CreateWS1SAMLApp=true
# OPTIONAL: (Mandatory if CreateWS1SAMLApp=true) Must be the HOSTNAME (not URL) of a WorkSpace ONE Access tenant. If CreateWS1SAMLApp=true, an API call will be made against this tenant to create a SAML Web App that allows for the UAG to have Admin SAML Login enabled and functioning right when the UAG is built. 
WS1Tenant=<WS1 Access tenant hostname> 
# OPTIONAL: (Mandatory if CreateWS1SAMLApp=true) Must be the Client ID of an OAuth token in the above WS1Tenant. This OAuth token will be used for all API Calls against the WS1Tenant.
WS1ClientID=ExampleClientID
# OPTIONAL: (Mandatory if CreateWS1SAMLApp=true) Must be the associated Shared Secret of the above WS1ClientID. 
WS1SharedSecret=ItsASecret
# OPTIONAL: (Mandatory if CreateWS1SAMLApp=true) Must be the exact name of the desired 'Workspace One Access' Access Policy to assign the UAG SAML Web App to.
WS1AccessPolicy=default_access_policy_set
# OPTIONAL: (Mandatory if CreateWS1SAMLApp=true) Must be a list of Groups from the above WS1Tenant that will be entitled to the WorkSpace ONE Web Application. The List of groups must be in the format: groupName1^groupName2^groupName3... (this means you can't use any groups with ^ in the name). Must be the exact 'Group Name' from WorkSpace ONE Access (case sensitive) 
WS1Grouplist=LGroup1^Group2^Group3


# OPTIONAL SECTION: Only configure if you would like the UAG (443) SSL Certs to be installed at UAG Creation time. 
# IMPORTANT: See the README.MD section 'Prerequisites > Create the ceritficate files' for information on how to generate the cert files 
[SSLcert]
# OPTIONAL: If you would like the UAG (443) SSL Certs to be installed at UAG Creation time, then specify a path to the Cert File here (See the 'README.MD' file, sub-section:'Create the ceritficate files' for more information)
# IMPORTANT: See the README.MD section 'Prerequisites > Create the ceritficate files' for information on how to generate the cert files 
pemCerts=C:\Temp\cert_fullchain.pem
# OPTIONAL: (Mandatory if pemCerts is specified) If you would like the UAG SSL Certs to be installed at UAG Creation time, then specify a path to the Certificates Key file here (See the 'README.MD' file, sub-section:'Create the ceritficate files' for more information)
# IMPORTANT: The Private Key file must be a PEM file in RSA Format - see the 'README.MD' file, sub-section:'Create the ceritficate files' for more information
pemPrivKey=C:\Temp\cert_RSAKey.pem

# OPTIONAL SECTION: Only configure if you would like the UAG Admin Page SSL Certs to be installed at UAG Creation time.
# IMPORTANT: See the README.MD section 'Prerequisites > Create the ceritficate files' for information on how to generate the cert files 
[SSLcertAdmin]
# OPTIONAL: If you would like the UAG Admin Page SSL Certs to be installed at UAG Creation time, then specify a path to the Cert File here (See the 'README.MD' file, sub-section:'Create the ceritficate files' for more information)
# IMPORTANT: The Certificate file must be a Full Chaine PEM file - see the 'README.MD' file, sub-section:'Create the ceritficate files' for more information
pemCerts=C:\Temp\cert_fullchain.pem
# OPTIONAL: (Mandatory if pemCerts is specified) If you would like the UAG Admin Page SSL Certs to be installed at UAG Creation time, then specify a path to the Certificates Key file here (See the 'README.MD' file, sub-section:'Create the ceritficate files' for more information)
# IMPORTANT: The Private Key file must be a PEM file in RSA Format - see the 'README.MD' file, sub-section:'Create the ceritficate files' for more information
pemPrivKey=C:\Temp\cert_RSAKey.pem

# OPTIONAL SECTION: Only configure if you would like to configure a SAML Identity Provider to be usable for UAG Authentication (Edge Service Auth or Admin Page Auth)
[IDPExternalMetadata1]
# OPTIONAL: This is the default setting. If false, unencrypted assertions are not allowed during SAML authentication. If true, unencrypted assertions are allowed during SAML authentication.
allowUnencrypted=false

# OPTIONAL: (Mandatory if configuring an IDP) This is the Entity ID of the IDP that you are configuring in this section. You can generally find this in the file given by metadataXmlFile
entityID=https://<WS1 Access Tenant>/SAAS/API/1.0/GET/metadata/idp.xml

# OPTIONAL: This is the default setting. When the toggle is set to false, it always forces the SAML auth page to be presented to the user when this Identity provider is used, provided the IDP is also configured to force SAML auth.
# When you enable the Always force SAML auth function, SAML ForceAuthn="true" is set as an attribute for the AuthnRequest to the IdP. The IdP is notified to ignore any previous security context while authenticating the user. 
forceAuthN=false

# OPTIONAL: (Mandatory if configuring an IDP) This is an accessible path to the IDPMetaData.xml file for the IDP you are configuring in this section. 
metadataXmlFile=C:\Temp\WS1-idp.xml

# OPTIONAL: If you want to use encrypted assertion to validate SAML authentication specify the path to a Certificate Chain PEM File here. 
# Encryption and decryption of the assertion requires a combination of a public and private key. The Identity provider encrypts the assertion with a public key which can be decrypted by UAG only with a public and a private key combination, thus ensuring enhanced security. 
#certChainPem=

# OPTIONAL: (Mandatory if specifying certChainPem) Only supported Certificate type for the IDP is PEM so this must be left as PEM if supplying a certChainPEM file
#encryptionCertificateType=PEM

# OPTIONAL: (Mandatory if specifying certChainPem) Must be the corresponding Private Key for the specified certChainPem - the key file must be in a PEM Format
#privateKeyPem=

# IMPORTANT NOTE: Can configure multiple Identity Providers by specifying sections [IDPExternalMetadata#] with number being sequential integers starting with 1
#[IDPExternalMetadata2]
#allowUnencrypted=
#certChainPem=
#encryptionCertificateType=
#entityID=
#forceAuthN=
#metadataXmlFile=
#privateKeyPem=

# OPTIONAL SECTION: This section is used to enable SAML Authentication to the UAG Admin (9443) Page
[adminSAMLSettings]
# OPTIONAL: (Mandatory if enabling SAML Auth to the UAG Admin Page) Set this to true if wanting to to enable UAG Admin Page SAML Auth. Not specifying this setting defaults it to false
enable=true

# OPTIONAL: (Mandatory if enabling SAML Auth to the UAG Admin Page) This is the Entity ID of the IDP that you are configuring as the authentication provider for the UAG Admin Page. This should match the Entity ID of one of the [IDPExternalMetadata#] Sections that was configured
entityId=https://<WS1 Access Tenant>/SAAS/API/1.0/GET/metadata/idp.xml
